name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  BUILD_TYPE: Release
  MAKEFLAGS: "-j2"

defaults:
  run:
    shell: bash

jobs:
  codestyle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: DoozyX/clang-format-lint-action@v0.15
        with:
          source:             'include src test'
          clangFormatVersion: 14

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Configure CMake
        run:  |
              if [ "$RUNNER_OS" == "Windows" ]; then
                cmake -S "${{github.workspace}}" -B "${{github.workspace}}/build" -DCMAKE_BUILD_TYPE=$BUILD_TYPE -T "ClangCl"
              else
                cmake -S "${{github.workspace}}" -B "${{github.workspace}}/build" -DCMAKE_BUILD_TYPE=$BUILD_TYPE
              fi  

      - name: Build
        run:  cmake --build "${{github.workspace}}/build" --config $BUILD_TYPE

  test:
    needs:   build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Configure CMake
        run:  |
              if [ "$RUNNER_OS" == "Windows" ]; then
                cmake -S "${{github.workspace}}" -B "${{github.workspace}}/build" -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_ZX_TESTS=ON -T "ClangCl"
              else
                cmake -S "${{github.workspace}}" -B "${{github.workspace}}/build" -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_ZX_TESTS=ON
              fi
      - name: Build
        run:  |
              if [ "$RUNNER_OS" == "Windows" ]; then
                cmake --build "${{github.workspace}}/build" --config $BUILD_TYPE
              else
                cmake --build "${{github.workspace}}/build" --config $BUILD_TYPE --target zx_test
              fi
      - name:              Test
        working-directory: ${{github.workspace}}/build/test
        run:               |
                           if [ "$RUNNER_OS" == "Windows" ]; then
                             cd $BUILD_TYPE && ./zx_test.exe
                           else
                             ctest -C $BUILD_TYPE --output-on-failure
                           fi

  coverage:
    needs:   test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Configure CMake
        run:  cmake -S "${{github.workspace}}" -B "${{github.workspace}}/build" -DCMAKE_BUILD_TYPE=Debug -DBUILD_ZX_TESTS=ON -DCOVERAGE=1
      - name: Build
        run:  cmake --build "${{github.workspace}}/build" --config Debug --target zx_test
      - name:              Test
        working-directory: ${{github.workspace}}/build/test
        run:               ctest -C Debug --output-on-failure
      - name: Run gcov
        run:  |
              find . -type f -name '*.gcno' -exec gcov -p  {} +
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
